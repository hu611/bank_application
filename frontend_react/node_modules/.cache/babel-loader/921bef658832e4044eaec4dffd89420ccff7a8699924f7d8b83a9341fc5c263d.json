{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport bcrypt from 'bcryptjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const get_salt_link = `http://localhost:63010/auth/getsalt`;\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (username.length == 0 || password.length == 0) {\n      alert(\"Empty Username or password\");\n      return;\n    }\n    console.log(`Username: ${username}, Password: ${password}`);\n    // TODO: Add login logic here\n    // get salt\n    let salt = \"\";\n    const salt_request = await fetch(get_salt_link + `?username=${username}`, {\n      method: \"GET\"\n    }).then(response => response.text()).then(result => salt = result);\n    console.log(salt);\n    const hash = bcrypt.hashSync(password, salt);\n    console.log(hash);\n    let login_response = \"\";\n    const request_link = `http://localhost:63010/auth/login?username=${username}&password=${hash}`;\n    const response = await fetch(request_link, {\n      method: \"POST\"\n    }).then(result => {\n      login_response = result;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: handleUsernameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: handlePasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","bcrypt","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","get_salt_link","handleUsernameChange","event","target","value","handlePasswordChange","handleSubmit","preventDefault","length","alert","console","log","salt","salt_request","fetch","method","then","response","text","result","hash","hashSync","login_response","request_link","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/login.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport bcrypt from 'bcryptjs'\n\nfunction LoginPage () {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const get_salt_link = `http://localhost:63010/auth/getsalt`\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    if (username.length == 0 || password.length == 0) {\n      alert(\"Empty Username or password\")\n      return\n    }\n    console.log(`Username: ${username}, Password: ${password}`)\n    // TODO: Add login logic here\n    // get salt\n    let salt = \"\"\n    const salt_request = await fetch(get_salt_link + `?username=${username}`, {\n      method: \"GET\",\n    }).then((response) => response.text()).\n      then((result) => salt = result)\n    console.log(salt)\n    const hash = bcrypt.hashSync(password, salt)\n    console.log(hash)\n    let login_response = \"\"\n    const request_link = `http://localhost:63010/auth/login?username=${username}&password=${hash}`\n    const response = await fetch(request_link, {\n      method: \"POST\"\n    }).then((result) => { login_response = result })\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Username:\n          <input\n            type=\"text\"\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}