{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Transaction/deposit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CryptoJS from 'crypto-js';\nimport { useLocation } from 'react-router-dom';\nimport '../axios_interceptor';\nimport { storage_url } from '../constants';\nimport Header from '../Utils/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DepositForm() {\n  _s();\n  const [accountNumber, setAccountNumber] = useState('');\n  const [amount, setAmount] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [count, setCount] = useState(0);\n  const [confirmcode, setConfirmcode] = useState(0);\n  const {\n    search\n  } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  useEffect(() => {\n    setAccountNumber(queryParams.get('cardNum'));\n    setConfirmcode(queryParams.get('confirmcode'));\n    if (count === 0) {\n      return;\n    }\n    const timer = setTimeout(() => {\n      setCount(count - 1);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [count]);\n  function encrypt_msg(msg, key, iv) {\n    return CryptoJS.AES.encrypt(msg, key, {\n      iv,\n      mode: CryptoJS.mode.CBC,\n      padding: CryptoJS.pad.Pkcs7\n    });\n  }\n  async function generate_email_code() {\n    try {\n      const response = await axios.get(storage_url + '/transaction/generateEmail');\n      console.log(response.data); // do something with the response\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  }\n  async function deposit() {\n    const data = {\n      account: accountNumber,\n      amount: amount,\n      confirmCode: confirmcode\n    };\n    // 定义加密密钥，此处使用的是 AES-256-CBC 加密算法，密钥长度为 32 位\n    const key = CryptoJS.enc.Utf8.parse('0123456789abcdef0123456789abcdef');\n    // 定义偏移量，此处使用的是 CBC 模式，偏移量长度为 16 位\n    const iv = CryptoJS.enc.Utf8.parse('0123456789abcdef');\n    // 使用 AES-256-CBC 加密算法对数据进行加密\n    const ciphertext = encrypt_msg(JSON.stringify(data), key, iv);\n    const transaction = ciphertext.toString();\n    console.log(transaction);\n    //does not allow negative value here\n    if (amount <= 0 | confirmcode.length === 0) {\n      return;\n    }\n    const deposit_data = {\n      \"transaction\": transaction\n    };\n    try {\n      const response = await axios.post(storage_url + \"/transaction/deposit\", deposit_data);\n      console.log(response.data); // do something with the response\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u8D26\\u6237\\u53F7\\u7801:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        readonly: true,\n        value: accountNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u6570\\u989D:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: confirmcode,\n      onChange: e => setConfirmcode(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generate_email_code,\n      disabled: count > 0,\n      children: count === 0 ? \"获取验证码\" : `${count}秒后重新获取`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: deposit,\n      children: \"\\u5145\\u503C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(DepositForm, \"Cohj9dY3nlBs7MgtmSFigmpoWJI=\", false, function () {\n  return [useLocation];\n});\n_c = DepositForm;\nexport default DepositForm;\nvar _c;\n$RefreshReg$(_c, \"DepositForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","CryptoJS","useLocation","storage_url","Header","jsxDEV","_jsxDEV","DepositForm","_s","accountNumber","setAccountNumber","amount","setAmount","errorMessage","setErrorMessage","count","setCount","confirmcode","setConfirmcode","search","queryParams","URLSearchParams","get","timer","setTimeout","clearTimeout","encrypt_msg","msg","key","iv","AES","encrypt","mode","CBC","padding","pad","Pkcs7","generate_email_code","response","console","log","data","error","message","deposit","account","confirmCode","enc","Utf8","parse","ciphertext","JSON","stringify","transaction","toString","length","deposit_data","post","children","fileName","_jsxFileName","lineNumber","columnNumber","type","readonly","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Transaction/deposit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport CryptoJS from 'crypto-js'\nimport { useLocation } from 'react-router-dom'\nimport '../axios_interceptor'\nimport { storage_url } from '../constants'\nimport Header from '../Utils/header'\n\nfunction DepositForm () {\n  const [accountNumber, setAccountNumber] = useState('')\n  const [amount, setAmount] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [count, setCount] = useState(0)\n  const [confirmcode, setConfirmcode] = useState(0)\n  const { search } = useLocation()\n  const queryParams = new URLSearchParams(search)\n\n  useEffect(() => {\n\n    setAccountNumber(queryParams.get('cardNum'))\n    setConfirmcode(queryParams.get('confirmcode'))\n    if (count === 0) {\n      return\n    }\n\n    const timer = setTimeout(() => {\n      setCount(count - 1)\n    }, 1000)\n\n    return () => clearTimeout(timer)\n  }, [count])\n\n  function encrypt_msg (msg, key, iv) {\n    return CryptoJS.AES.encrypt(msg, key, {\n      iv,\n      mode: CryptoJS.mode.CBC,\n      padding: CryptoJS.pad.Pkcs7,\n    })\n  }\n\n  async function generate_email_code () {\n    try {\n      const response = await axios.get(storage_url + '/transaction/generateEmail')\n      console.log(response.data) // do something with the response\n    } catch (error) {\n      setErrorMessage(error.message)\n    }\n  }\n\n  async function deposit () {\n    const data = {\n      account: accountNumber,\n      amount: amount,\n      confirmCode: confirmcode,\n    }\n    // 定义加密密钥，此处使用的是 AES-256-CBC 加密算法，密钥长度为 32 位\n    const key = CryptoJS.enc.Utf8.parse('0123456789abcdef0123456789abcdef')\n    // 定义偏移量，此处使用的是 CBC 模式，偏移量长度为 16 位\n    const iv = CryptoJS.enc.Utf8.parse('0123456789abcdef')\n    // 使用 AES-256-CBC 加密算法对数据进行加密\n    const ciphertext = encrypt_msg(JSON.stringify(data), key, iv)\n    const transaction = ciphertext.toString()\n    console.log(transaction)\n    //does not allow negative value here\n    if (amount <= 0 | confirmcode.length === 0) {\n      return\n    }\n    const deposit_data = {\n      \"transaction\": transaction\n    }\n    try {\n      const response = await axios.post(storage_url + \"/transaction/deposit\", deposit_data)\n      console.log(response.data) // do something with the response\n    } catch (error) {\n      setErrorMessage(error.message)\n    }\n  }\n\n\n\n  return (\n    <div>\n      <Header></Header>\n      <label>\n        账户号码:\n        <input type='text' readonly value={accountNumber}></input>\n      </label>\n      <br />\n      <label>\n        数额:\n        <input type=\"text\" value={amount} onChange={(e) => setAmount(e.target.value)} />\n      </label>\n      <br />\n      <input type=\"text\" value={confirmcode} onChange={(e) => setConfirmcode(e.target.value)} />\n      <button onClick={generate_email_code} disabled={count > 0}>\n        {count === 0 ? \"获取验证码\" : `${count}秒后重新获取`}\n      </button>\n      <br></br>\n      <button type=\"submit\" onClick={deposit}>充值</button>\n    </div>\n\n  )\n}\n\nexport default DepositForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}