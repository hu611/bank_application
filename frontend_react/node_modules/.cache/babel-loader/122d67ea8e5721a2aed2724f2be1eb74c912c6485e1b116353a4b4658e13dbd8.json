{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction sha256(password) {\n  // 使用 SHA256 加密\n  return CryptoJS.SHA256(password).toString();\n}\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const get_salt_link = `http://localhost:63010/auth/getsalt`;\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (username.length == 0 || password.length == 0) {\n      alert(\"Empty Username or password\");\n      return;\n    }\n    console.log(`Username: ${username}, Password: ${password}`);\n    // TODO: Add login logic here\n    // get salt\n    const hash = sha256(password);\n    console.log(hash);\n    const request_link = `http://localhost:63010/auth/login?username=${username}&password=${hash}`;\n    const response = await fetch(request_link, {\n      method: \"POST\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: handleUsernameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: handlePasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","CryptoJS","jsxDEV","_jsxDEV","sha256","password","SHA256","toString","LoginPage","_s","username","setUsername","setPassword","get_salt_link","handleUsernameChange","event","target","value","handlePasswordChange","handleSubmit","preventDefault","length","alert","console","log","hash","request_link","response","fetch","method","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/login.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport CryptoJS from 'crypto-js'\nfunction sha256 (password) {\n  // 使用 SHA256 加密\n  return CryptoJS.SHA256(password).toString()\n}\n\nfunction LoginPage () {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const get_salt_link = `http://localhost:63010/auth/getsalt`\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    if (username.length == 0 || password.length == 0) {\n      alert(\"Empty Username or password\")\n      return\n    }\n    console.log(`Username: ${username}, Password: ${password}`)\n    // TODO: Add login logic here\n    // get salt\n    const hash = sha256(password)\n    console.log(hash)\n    const request_link = `http://localhost:63010/auth/login?username=${username}&password=${hash}`\n    const response = await fetch(request_link, {\n      method: \"POST\"\n    })\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Username:\n          <input\n            type=\"text\"\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginPage\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAChC,SAASC,MAAMA,CAAEC,QAAQ,EAAE;EACzB;EACA,OAAOJ,QAAQ,CAACK,MAAM,CAACD,QAAQ,CAAC,CAACE,QAAQ,EAAE;AAC7C;AAEA,SAASC,SAASA,CAAA,EAAI;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,QAAQ,EAAEO,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,aAAa,GAAI,qCAAoC;EAE3D,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;IACtCJ,WAAW,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,oBAAoB,GAAIH,KAAK,IAAK;IACtCH,WAAW,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAID,MAAME,YAAY,GAAG,MAAOJ,KAAK,IAAK;IACpCA,KAAK,CAACK,cAAc,EAAE;IACtB,IAAIV,QAAQ,CAACW,MAAM,IAAI,CAAC,IAAIhB,QAAQ,CAACgB,MAAM,IAAI,CAAC,EAAE;MAChDC,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACF;IACAC,OAAO,CAACC,GAAG,CAAE,aAAYd,QAAS,eAAcL,QAAS,EAAC,CAAC;IAC3D;IACA;IACA,MAAMoB,IAAI,GAAGrB,MAAM,CAACC,QAAQ,CAAC;IAC7BkB,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;IACjB,MAAMC,YAAY,GAAI,8CAA6ChB,QAAS,aAAYe,IAAK,EAAC;IAC9F,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,YAAY,EAAE;MACzCG,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAED,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACd/B,OAAA;MAAMgC,QAAQ,EAAEhB,YAAa;MAAAW,QAAA,gBAC3B3B,OAAA;QAAA2B,QAAA,GAAO,WAEL,eAAA3B,OAAA;UACEiC,IAAI,EAAC,MAAM;UACXnB,KAAK,EAAEP,QAAS;UAChB2B,QAAQ,EAAEvB;QAAqB;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC/B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI,eACR/B,OAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACN/B,OAAA;QAAA2B,QAAA,GAAO,WAEL,eAAA3B,OAAA;UACEiC,IAAI,EAAC,UAAU;UACfnB,KAAK,EAAEZ,QAAS;UAChBgC,QAAQ,EAAEnB;QAAqB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC/B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI,eACR/B,OAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACN/B,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAACzB,EAAA,CA1DQD,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA4DlB,eAAeA,SAAS;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}