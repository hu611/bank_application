{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Transaction/transfer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CryptoJS from 'crypto-js';\nimport '../axios_interceptor';\nimport { storage_url } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransferForm() {\n  _s();\n  const [accountNumber, setAccountNumber] = useState('');\n  const [amount, setAmount] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [count, setCount] = useState(0);\n  const [confirmcode, setConfirmcode] = useState(0);\n  useEffect(() => {\n    setAccountNumber(\"320202020203\");\n    if (count === 0) {\n      return;\n    }\n    const timer = setTimeout(() => {\n      setCount(count - 1);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [count]);\n  function encrypt_msg(msg, key, iv) {\n    return CryptoJS.AES.encrypt(msg, key, {\n      iv,\n      mode: CryptoJS.mode.CBC,\n      padding: CryptoJS.pad.Pkcs7\n    });\n  }\n  async function generate_email_code() {\n    try {\n      const response = await axios.get(storage_url + '/transaction/generateEmail');\n      console.log(response.data); // do something with the response\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  }\n  async function deposit() {\n    const data = {\n      account: accountNumber,\n      amount: amount\n    };\n    // 定义加密密钥，此处使用的是 AES-256-CBC 加密算法，密钥长度为 32 位\n    const key = CryptoJS.enc.Utf8.parse('0123456789abcdef0123456789abcdef');\n    // 定义偏移量，此处使用的是 CBC 模式，偏移量长度为 16 位\n    const iv = CryptoJS.enc.Utf8.parse('0123456789abcdef');\n    // 使用 AES-256-CBC 加密算法对数据进行加密\n    const ciphertext = encrypt_msg(JSON.stringify(data), key, iv);\n    const transaction = btoa(ciphertext.toString());\n    //does not allow negative value here\n    if (amount <= 0 | confirmcode.length === 0) {\n      return;\n    }\n    console.log(transaction);\n    const deposit_data = {\n      \"transaction\": transaction\n    };\n    try {\n      const response = await axios.post(storage_url + \"/transaction/deposit\", deposit_data);\n      console.log(response.data); // do something with the response\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u8D26\\u6237\\u53F7\\u7801:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        readonly: true,\n        value: accountNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u6570\\u989D:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: confirmcode,\n      onChange: e => setConfirmcode(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generate_email_code,\n      disabled: count > 0,\n      children: count === 0 ? \"获取验证码\" : `${count}秒后重新获取`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: deposit,\n      children: \"\\u5145\\u503C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(TransferForm, \"G1LcX7Ias6k8b4Ut29JZ3AdRjJw=\");\n_c = TransferForm;\nexport default TransferForm;\nvar _c;\n$RefreshReg$(_c, \"TransferForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","CryptoJS","storage_url","jsxDEV","_jsxDEV","TransferForm","_s","accountNumber","setAccountNumber","amount","setAmount","errorMessage","setErrorMessage","count","setCount","confirmcode","setConfirmcode","timer","setTimeout","clearTimeout","encrypt_msg","msg","key","iv","AES","encrypt","mode","CBC","padding","pad","Pkcs7","generate_email_code","response","get","console","log","data","error","message","deposit","account","enc","Utf8","parse","ciphertext","JSON","stringify","transaction","btoa","toString","length","deposit_data","post","children","type","readonly","value","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Transaction/transfer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport CryptoJS from 'crypto-js'\nimport '../axios_interceptor'\nimport { storage_url } from '../constants'\n\nfunction TransferForm () {\n  const [accountNumber, setAccountNumber] = useState('')\n  const [amount, setAmount] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [count, setCount] = useState(0)\n  const [confirmcode, setConfirmcode] = useState(0)\n\n  useEffect(() => {\n    setAccountNumber(\"320202020203\")\n    if (count === 0) {\n      return\n    }\n\n    const timer = setTimeout(() => {\n      setCount(count - 1)\n    }, 1000)\n\n    return () => clearTimeout(timer)\n  }, [count])\n\n  function encrypt_msg (msg, key, iv) {\n    return CryptoJS.AES.encrypt(msg, key, {\n      iv,\n      mode: CryptoJS.mode.CBC,\n      padding: CryptoJS.pad.Pkcs7,\n    })\n  }\n\n  async function generate_email_code () {\n    try {\n      const response = await axios.get(storage_url + '/transaction/generateEmail')\n      console.log(response.data) // do something with the response\n    } catch (error) {\n      setErrorMessage(error.message)\n    }\n  }\n\n  async function deposit () {\n    const data = {\n      account: accountNumber,\n      amount: amount\n    }\n    // 定义加密密钥，此处使用的是 AES-256-CBC 加密算法，密钥长度为 32 位\n    const key = CryptoJS.enc.Utf8.parse('0123456789abcdef0123456789abcdef')\n    // 定义偏移量，此处使用的是 CBC 模式，偏移量长度为 16 位\n    const iv = CryptoJS.enc.Utf8.parse('0123456789abcdef')\n    // 使用 AES-256-CBC 加密算法对数据进行加密\n    const ciphertext = encrypt_msg(JSON.stringify(data), key, iv)\n    const transaction = btoa(ciphertext.toString())\n    //does not allow negative value here\n    if (amount <= 0 | confirmcode.length === 0) {\n      return\n    }\n    console.log(transaction)\n    const deposit_data = {\n      \"transaction\": transaction\n    }\n    try {\n      const response = await axios.post(storage_url + \"/transaction/deposit\", deposit_data)\n      console.log(response.data) // do something with the response\n    } catch (error) {\n      setErrorMessage(error.message)\n    }\n  }\n\n\n\n  return (\n    <div>\n      <label>\n        账户号码:\n        <input type='text' readonly value={accountNumber}></input>\n      </label>\n      <br />\n      <label>\n        数额:\n        <input type=\"text\" value={amount} onChange={(e) => setAmount(e.target.value)} />\n      </label>\n      <br />\n      <input type=\"text\" value={confirmcode} onChange={(e) => setConfirmcode(e.target.value)} />\n      <button onClick={generate_email_code} disabled={count > 0}>\n        {count === 0 ? \"获取验证码\" : `${count}秒后重新获取`}\n      </button>\n      <br></br>\n      <button type=\"submit\" onClick={deposit}>充值</button>\n    </div>\n\n  )\n}\n\nexport default TransferForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}