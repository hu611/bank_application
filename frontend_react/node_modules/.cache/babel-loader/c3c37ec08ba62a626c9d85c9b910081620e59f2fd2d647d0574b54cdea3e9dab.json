{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Login/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport bcrypt from 'bcryptjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getSalt(username) {\n  let salt = \"\";\n  //get salt value\n  await fetch(get_salt_link + `?username=${username}`, {\n    method: \"GET\"\n  }).then(response => response.text()).then(result => salt = result);\n  return salt;\n}\nasync function getToken(username, hash) {\n  let login_response = \"\";\n  const request_link = `http://localhost:63010/auth/oauth/token?client_id=XcWebApp&grant_type=password&username=${username}&password=${hash}`;\n  try {\n    const response = await fetch(request_link, {\n      method: \"POST\"\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      login_response = data;\n      // 将 JWT 令牌存储在 localStorage 中\n      console.log(login_response.access_token);\n    });\n    return login_response.access_token;\n  } catch {\n    alert(\"login unsuccessful\");\n  }\n}\nconst SUCCESSFUL_LOGIN_MSG = \"Login successful\";\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const get_salt_link = `http://localhost:63010/auth/getsalt`;\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (username.length === 0 || password.length === 0) {\n      alert(\"Empty Username or password\");\n      return;\n    }\n    // TODO: Add login logic here\n    // get salt\n\n    const salt = getSalt(username);\n    const hash = bcrypt.hashSync(password, salt);\n    localStorage.setItem('jwtToken', jwtToken);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: handleUsernameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: handlePasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","bcrypt","jsxDEV","_jsxDEV","getSalt","username","salt","fetch","get_salt_link","method","then","response","text","result","getToken","hash","login_response","request_link","json","data","console","log","access_token","alert","SUCCESSFUL_LOGIN_MSG","LoginPage","_s","setUsername","password","setPassword","handleUsernameChange","event","target","value","handlePasswordChange","handleSubmit","preventDefault","length","hashSync","localStorage","setItem","jwtToken","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Login/login.js"],"sourcesContent":["import React, { useState } from \"react\"\n\nimport bcrypt from 'bcryptjs'\n\nasync function getSalt (username) {\n  let salt = \"\"\n  //get salt value\n  await fetch(get_salt_link + `?username=${username}`, {\n    method: \"GET\",\n  }).then((response) => response.text()).\n    then((result) => salt = result)\n  return salt\n}\n\nasync function getToken (username, hash) {\n  let login_response = \"\"\n  const request_link = `http://localhost:63010/auth/oauth/token?client_id=XcWebApp&grant_type=password&username=${username}&password=${hash}`\n  try {\n    const response = await fetch(request_link, {\n      method: \"POST\"\n    }).then((response) => {\n      return response.json()\n    }).then((data) => {\n      login_response = data\n      // 将 JWT 令牌存储在 localStorage 中\n      console.log(login_response.access_token)\n    })\n    return login_response.access_token\n  } catch {\n    alert(\"login unsuccessful\")\n  }\n\n}\n\nconst SUCCESSFUL_LOGIN_MSG = \"Login successful\"\nfunction LoginPage () {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const get_salt_link = `http://localhost:63010/auth/getsalt`\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    if (username.length === 0 || password.length === 0) {\n      alert(\"Empty Username or password\")\n      return\n    }\n    // TODO: Add login logic here\n    // get salt\n\n    const salt = getSalt(username)\n    const hash = bcrypt.hashSync(password, salt)\n\n\n    localStorage.setItem('jwtToken', jwtToken)\n\n\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Username:\n          <input\n            type=\"text\"\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}