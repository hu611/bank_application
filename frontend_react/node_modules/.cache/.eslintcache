[{"/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/index.js":"1","/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/App.js":"2","/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Utils/header.js":"3","/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Login/login.js":"4","/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Login/register.js":"5","/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Transaction/transfer.js":"6","/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/main.js":"7"},{"size":462,"mtime":1680679295849,"results":"8","hashOfConfig":"9"},{"size":702,"mtime":1681032903694,"results":"10","hashOfConfig":"9"},{"size":2092,"mtime":1680774883759,"results":"11","hashOfConfig":"9"},{"size":2741,"mtime":1680774490611,"results":"12","hashOfConfig":"9"},{"size":3249,"mtime":1680782357152,"results":"13","hashOfConfig":"9"},{"size":2707,"mtime":1681210797487,"results":"14","hashOfConfig":"9"},{"size":251,"mtime":1681033110766,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1eg3jt7",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/index.js",[],[],[],"/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/App.js",["40","41"],[],"/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Utils/header.js",["42","43","44","45","46","47","48"],[],"import { Link } from 'react-router-dom'\nimport './header.scss'\nfunction Header () {\n  return (\n    <div id=\"home\">\n      <div className=\"wrapper\">\n        <script type=\"text/javascript\" src=\"https://pic.bankofchina.com/bocappd/images/boc2013_jquery-min.js\"></script>\n        <script defer async src=\"\">\n        </script>\n        <div className=\"top clearfix\">\n          <div className=\"top_links\">\n            <a>简体中文</a>\n            <a>繁体中文</a>\n            <a>English</a>\n            <a target=\"_self\">无障碍浏览</a>\n          </div>\n          <div className=\"top_menu\">\n            <p className=\"p_2013\">本网站支持IPv6</p>\n            <p className=\"p_2013\" id=\"top_service\">\n\n              <Link to=\"/login\">登录中行</Link>\n\n            </p>\n\n            <p className=\"p_2013\" id=\"top_network\">\n\n              <Link to=\"/register\">注册</Link>\n\n\n              <a title=\"在线客服\" className=\"top_zxkf\">在线客服</a>\n\n\n            </p>\n          </div>\n        </div>\n        <div className=\"header\">\n          <div className=\"header_area\">\n            <h1 className=\"logo\"><a title=\"中国银行\"></a></h1>\n            <div className=\"header_info\">\n              <p className=\"phone\">服务热线：<span>110</span>信用卡热线：<span>110</span></p>\n              <form name=\"trssearchform\" id=\"trssearchform\" action=\"https://srh.bankofchina.com/search/sitesearch/index.jsp\"\n                method=\"post\" target=\"_blank\">\n                <input type=\"hidden\" name=\"searchColumn\" value=\"all\" />\n                <div className=\"search_bar\">\n                  <input type=\"text\" className=\"search_ipt\" id=\"sword\" name=\"sword\" value=\"请输入检索关键词\"\n                    onFocus=\"if(this.value=='请输入检索关键词') this.value='';\"\n                    onBlur=\"if(this.value == '') this.value='请输入检索关键词';\" />\n                  <input type=\"button\" className=\"search_btn\" />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Login/login.js",["49","50","51","52"],[],"import React, { useState } from \"react\"\nimport Header from \"../Utils/header\"\nimport bcrypt from 'bcryptjs'\nimport { redirect, useNavigate } from \"react-router-dom\"\n\nconst get_salt_link = `http://localhost:63010/auth/getsalt`\nasync function getSalt (username) {\n  let salt = \"\"\n  //get salt value\n  await fetch(get_salt_link + `?username=${username}`, {\n    method: \"GET\",\n  }).then((response) => response.text()).\n    then((result) => salt = result)\n  return salt\n}\n\nasync function getToken (username, hash) {\n  let login_response = \"\"\n  const request_link = `http://localhost:63010/auth/oauth/token?client_id=XcWebApp&client_secret=XcWebApp&grant_type=password&username=${username}&password=${hash}`\n  try {\n    const response = await fetch(request_link, {\n      method: \"POST\"\n    }).then((response) => {\n      if (!response.ok) {\n        console.log(response.status)\n        alert('wrong username or password')\n      } else {\n        return response.json()\n      }\n    }).then((data) => {\n      login_response = data\n      // 将 JWT 令牌存储在 localStorage 中\n\n    })\n    return login_response.access_token\n  } catch {\n    return \"Unsuccessful\"\n  }\n\n}\n\nconst SUCCESSFUL_LOGIN_MSG = \"Login successful\"\nfunction LoginPage () {\n  const navigate = useNavigate()\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    if (username.length === 0 || password.length === 0) {\n      alert(\"Empty Username or password\")\n      return\n    }\n    // TODO: Add login logic here\n    // get salt\n\n    const salt = await getSalt(username)\n    const hash = bcrypt.hashSync(password, salt)\n\n    try {\n      const jwtToken = await getToken(username, hash)\n      console.log(\"successful\")\n      if (jwtToken !== null) {\n        localStorage.setItem('jwtToken', jwtToken)\n        navigate('/')\n      }\n    } catch {\n      alert(\"wrong password or username\")\n    }\n\n\n\n  }\n\n  return (\n    <div>\n      <Header></Header>\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Username:\n          <input\n            type=\"text\"\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginPage\n","/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Login/register.js",[],[],"/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/Transaction/transfer.js",[],[],"/Users/austin/Desktop/projects/Bank_Application/frontend_react/src/main.js",[],[],{"ruleId":"53","severity":1,"message":"54","line":2,"column":50,"nodeType":"55","messageId":"56","endLine":2,"endColumn":54},{"ruleId":"53","severity":1,"message":"57","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":12,"column":13,"nodeType":"60","endLine":12,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":13,"column":13,"nodeType":"60","endLine":13,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":14,"column":13,"nodeType":"60","endLine":14,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":15,"column":13,"nodeType":"60","endLine":15,"endColumn":31},{"ruleId":"58","severity":1,"message":"59","line":30,"column":15,"nodeType":"60","endLine":30,"endColumn":52},{"ruleId":"61","severity":1,"message":"62","line":38,"column":34,"nodeType":"60","endLine":38,"endColumn":50},{"ruleId":"58","severity":1,"message":"59","line":38,"column":34,"nodeType":"60","endLine":38,"endColumn":50},{"ruleId":"53","severity":1,"message":"63","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":12,"column":41,"nodeType":"66","messageId":"67","endLine":12,"endColumn":42,"fix":"68"},{"ruleId":"53","severity":1,"message":"69","line":21,"column":11,"nodeType":"55","messageId":"56","endLine":21,"endColumn":19},{"ruleId":"53","severity":1,"message":"70","line":42,"column":7,"nodeType":"55","messageId":"56","endLine":42,"endColumn":27},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'redirect' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"71","text":"72"},"'response' is assigned a value but never used.","'SUCCESSFUL_LOGIN_MSG' is assigned a value but never used.",[412,418],"\n    ."]